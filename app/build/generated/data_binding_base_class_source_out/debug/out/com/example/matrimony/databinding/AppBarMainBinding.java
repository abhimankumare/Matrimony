// Generated by view binder compiler. Do not edit!
package com.example.matrimony.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import com.example.matrimony.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.bottomappbar.BottomAppBar;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AppBarMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final BottomAppBar bottomBar;

  @NonNull
  public final BottomNavigationView bottomNavigationView;

  @NonNull
  public final CoordinatorLayout coordinatorLayout;

  @NonNull
  public final FloatingActionButton fabScan;

  @NonNull
  public final ContentMainBinding include;

  @NonNull
  public final Toolbar toolbar;

  private AppBarMainBinding(@NonNull ConstraintLayout rootView, @NonNull AppBarLayout appBarLayout,
      @NonNull BottomAppBar bottomBar, @NonNull BottomNavigationView bottomNavigationView,
      @NonNull CoordinatorLayout coordinatorLayout, @NonNull FloatingActionButton fabScan,
      @NonNull ContentMainBinding include, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.bottomBar = bottomBar;
    this.bottomNavigationView = bottomNavigationView;
    this.coordinatorLayout = coordinatorLayout;
    this.fabScan = fabScan;
    this.include = include;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AppBarMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AppBarMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.app_bar_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AppBarMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = rootView.findViewById(id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.bottom_bar;
      BottomAppBar bottomBar = rootView.findViewById(id);
      if (bottomBar == null) {
        break missingId;
      }

      id = R.id.bottom_navigation_view;
      BottomNavigationView bottomNavigationView = rootView.findViewById(id);
      if (bottomNavigationView == null) {
        break missingId;
      }

      id = R.id.coordinatorLayout;
      CoordinatorLayout coordinatorLayout = rootView.findViewById(id);
      if (coordinatorLayout == null) {
        break missingId;
      }

      id = R.id.fabScan;
      FloatingActionButton fabScan = rootView.findViewById(id);
      if (fabScan == null) {
        break missingId;
      }

      id = R.id.include;
      View include = rootView.findViewById(id);
      if (include == null) {
        break missingId;
      }
      ContentMainBinding binding_include = ContentMainBinding.bind(include);

      id = R.id.toolbar;
      Toolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      return new AppBarMainBinding((ConstraintLayout) rootView, appBarLayout, bottomBar,
          bottomNavigationView, coordinatorLayout, fabScan, binding_include, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
