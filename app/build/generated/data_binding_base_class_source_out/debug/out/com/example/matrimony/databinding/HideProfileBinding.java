// Generated by view binder compiler. Do not edit!
package com.example.matrimony.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.matrimony.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HideProfileBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button changeButton;

  @NonNull
  public final TextView tvText1;

  @NonNull
  public final TextView tvText2;

  @NonNull
  public final TextView tvText3;

  @NonNull
  public final TextView tvText4;

  @NonNull
  public final TextView tvText5;

  private HideProfileBinding(@NonNull FrameLayout rootView, @NonNull Button changeButton,
      @NonNull TextView tvText1, @NonNull TextView tvText2, @NonNull TextView tvText3,
      @NonNull TextView tvText4, @NonNull TextView tvText5) {
    this.rootView = rootView;
    this.changeButton = changeButton;
    this.tvText1 = tvText1;
    this.tvText2 = tvText2;
    this.tvText3 = tvText3;
    this.tvText4 = tvText4;
    this.tvText5 = tvText5;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HideProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HideProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.hide_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HideProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.changeButton;
      Button changeButton = rootView.findViewById(id);
      if (changeButton == null) {
        break missingId;
      }

      id = R.id.tv_text1;
      TextView tvText1 = rootView.findViewById(id);
      if (tvText1 == null) {
        break missingId;
      }

      id = R.id.tv_text2;
      TextView tvText2 = rootView.findViewById(id);
      if (tvText2 == null) {
        break missingId;
      }

      id = R.id.tv_text3;
      TextView tvText3 = rootView.findViewById(id);
      if (tvText3 == null) {
        break missingId;
      }

      id = R.id.tv_text4;
      TextView tvText4 = rootView.findViewById(id);
      if (tvText4 == null) {
        break missingId;
      }

      id = R.id.tv_text5;
      TextView tvText5 = rootView.findViewById(id);
      if (tvText5 == null) {
        break missingId;
      }

      return new HideProfileBinding((FrameLayout) rootView, changeButton, tvText1, tvText2, tvText3,
          tvText4, tvText5);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
